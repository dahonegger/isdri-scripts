function out=readDJILogCSV(fn,fout)
%
% out=readDJILogCSV(fn,[fout])
%
% Reads csv file with DJI telemetry data, usually generated by airdata.com.
% Output 'out' is a struct with the data.  If a filename 'fout' is
% specified, the same data is saved to that file (matlab format)
%

% % test code: hard-coded input fn
% clear
% fn='2017-04-14_20-29-06_Standard.csv';

fid=fopen(fn,'r');

% parse header line to get variable names
header=fgetl(fid);
n=0;
while(~isempty(header))
  n=n+1;
  [vname{n},header]=strtok(header,',');
  vname{n}=strrep(vname{n},' ','');
  i0=strfind(vname{n},'(');
  if(~isempty(i0));
    units{n}=vname{n}(i0+1:end-1);
    vname{n}=vname{n}(1:(i0-1));
  else
    units{n}='-';
  end
end

% parse each line to extract data.  This is kind of reinventing textscan,
% but I had a terrible time getting textscan to deal with parsing the
% date field
k=0;
while(1)
  thisline=fgetl(fid);
  if(~ischar(thisline)), break, end
  k=k+1;
  for n=1:length(vname)
    [tok,thisline]=strtok(thisline,',');
    switch vname{n}
     case 'datetime'
      eval([vname{n} '(k)=datenum(''' tok ''');']);
     case 'flycState'
      eval([vname{n} '{k}=tok;']);
     case 'message'
      eval([vname{n} '{k}=tok;']);
     otherwise
      eval([vname{n} '(k)=str2num(tok);']);
    end
  end
end

% pack variables into output struct
out=struct;
for n=1:length(vname)
  out=setfield(out,vname{n},eval(vname{n}));
  clear(vname{n});
end
out.meta.vname=vname;
out.meta.units=units;

% some files have duplicate entries in the time vector, seems to have
% happened to Gustav ever since it took a swim in the ocean.  Detect and
% clean
[~,ind] = unique(out.time);
if(length(ind)<length(out.time))
  warning('multiple output times detected, removing')
end
sz=size(out.time);
fld=fields(out);
for i=1:length(fld)
  this=getfield(out,fld{i});
  if(sum(size(this)-sz)==0)
    this=this(ind);
    out=setfield(out,fld{i},this);
  end
end

% optional, save to file
if(nargin==2)
  save(fout,'-struct','out')
end

